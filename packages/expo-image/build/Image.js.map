{"version":3,"file":"Image.js","sourceRoot":"","sources":["../src/Image.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAML,UAAU,GACX,MAAM,cAAc,CAAC;AAEtB,OAAO,SAAS,MAAM,aAAa,CAAC;AAapC,MAAM,CAAC,OAAO,OAAO,KAAM,SAAQ,KAAK,CAAC,SAAqB;IAC5D,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvE,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,SAAS,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;QACxF,MAAM,UAAU,GAAG,cAAc,IAAI,eAAe,IAAI,OAAO,CAAC;QAEhE,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAAG,CAAC;IAChF,CAAC;CACF","sourcesContent":["import React from 'react';\nimport {\n  AccessibilityProps,\n  ImageResizeMode,\n  ImageSourcePropType,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\n\nimport ExpoImage from './ExpoImage';\n\nexport interface ImageProps extends AccessibilityProps {\n  // On one hand we want to pass resolved source to native module.\n  // On the other hand, react-native-web doesn't expose a resolveAssetSource\n  // function, so we can't use it there. So we pass the unresolved source\n  // to \"native components\" and they decide whether to resolve the value\n  // or not.\n  source?: ImageSourcePropType | null;\n  style?: StyleProp<ImageStyle>;\n  resizeMode?: ImageResizeMode;\n}\n\nexport default class Image extends React.Component<ImageProps> {\n  render() {\n    const { style, resizeMode: resizeModeProp, ...restProps } = this.props;\n\n    const { resizeMode: resizeModeStyle, ...restStyle } = StyleSheet.flatten([style]) || {};\n    const resizeMode = resizeModeProp || resizeModeStyle || 'cover';\n\n    return <ExpoImage {...restProps} style={restStyle} resizeMode={resizeMode} />;\n  }\n}\n"]}